#include<stdio.h>
#include<stdlib.h>

struct node{
	int data;
	struct node* left;
	struct node* right;
}*n;


struct node* createNode(int val)
{
	n = (struct node*)malloc(sizeof(struct node));
	n->data = val;
	n->left = NULL;
	n->right = NULL;
	return n;
}

struct node* search(struct node* root,int val)
{
	if(root==NULL|| root->data==val)
	    return root;
	if(val > root->data)
	    return search(root->right,val);
	else
	    return search(root->left,val);
	
}

struct node* insert(struct node* root,int val)
{
	if(root==NULL)
	{
		return createNode(val);
	}
	else if(val > root->data)
	{
		root->right = insert (root->right,val);
	}
	else
	   root->left = insert(root->left,val);
	   
	return root;
}

struct node* delete(struct node* root, int x) {  
  
  if (root == NULL)  
    return NULL;  
  if (x > root->data)  
    root->right = delete(root->right, x);  
  else if (x < root->data)  
    root->left = delete(root->left, x);  
  else {  
    if (root->left == NULL && root->right == NULL){ 
   	  printf("%d",root->data);  
      free(root);  
      return NULL;  
    }  
    else if (root->left == NULL || root->right == NULL){  
      struct node *temp;  
      if (root->left == NULL)  {
	  
        temp = root->right;
		printf("%d",temp->data);
	}
      else{
	  
        temp = root->left; 
		 printf("%d",temp->data); 
	}
      free(root);  
      return temp;  
    }  
     
  }  
  return root;  
}  

void inorder(struct node* root)
{
	
    if (root != NULL) {
        inorder(root->left);
        printf("%d ", root->data);
        inorder(root->right);
    }
    //printf("\n");
}

void postorder(struct node* root)
{
   // printf("Post Order : ");
	if(root != NULL)
	{
		inorder(root->left);
		inorder(root->right);
		printf("%d ",root->data);
	}
	//printf("\n");
}

void preorder(struct node* root)
{
    //printf("Pre Order : ");
	if(root!=NULL)
	{
		printf("%d ",root->data);
		inorder(root->left);
		inorder(root->right);
	}
}


int main()
{
	struct node* root;
	root=createNode(10);
	insert(root,20);
	insert(root,11);
	insert(root,4);
	insert(root,8);
	insert(root,34);
	
	printf("\ndelete element : ");
	delete(root,8);
	
	printf("\nIn Order : ");
	inorder(root);
	printf("\n");
	printf("Pre Order : ");
	preorder(root);
	printf("\n");
	printf("Post Order : ");
	postorder(root);
	

	return 0;
	
}
