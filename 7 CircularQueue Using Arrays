
#include <stdio.h>

int front = -1, rear = -1,size=5,num;
int q[5];


int isfull() {
  if ((front == rear + 1) || (front == 0 && rear == size - 1))
   {
   return 1;
}
  return 0;
}


int isempty() {
  if (front == -1)
  {
   return 1;
}
  return 0;
}


void enqueue(int n) {
  if (isfull()){
  
    printf("\n Queue is full!! \n");
  }
  else {
    if (front == -1) {
	    front = 0;
     }
    rear = (rear + 1) % size;
    q[rear] = n;
    
  }
}


int dequeue() {
  int n;
  if (isempty())
  {
    printf("\n Queue is empty !! \n");
    return (-1);
  } 
  else 
  {
    n = q[front];
    if (front == rear)
	 {
      front = -1;
      rear = -1;
    } 
    
    else 
	{
      front = (front + 1) % size;
    }
    
    return (n);
  }
}


void peek() {
    if (front == NULL && rear == NULL){
        printf("Queue is Empty\n\n");
    }
    else{
    printf("\nPeek of Front : %d", q[front]);
    printf("\nPeek of Rear : %d\n\n", q[rear]);
    }
}

void dis() {
  int i;
  if (isempty())
  {
     printf(" \n Empty Queue\n");
  }
  else 
  {
   
    for (i = front; i != rear; i = (i + 1) % size) 
	{
      printf("%d ", q[i]);
    }
    printf("\n");

  }
}

int main() {
   int c=0;
   while(c!=5)
   {
   	    printf("Circular Queue\n1. Enqueue\n2. Dequeue\n3. peek\n4, Display\n5. End\n");
   	    scanf("%d",&c);
   	    switch(c)
   	   {
   	   	    case 1:
   	   	    	printf("Enter the element :");
   	   	    	scanf("%d",&num);
   	   	    	enqueue(num);
   	   	    	break;
   	   	    case 2:
   	   	    	dequeue();
   	   	    	break;
   	   	    case 3:
   	   	    	peek();
   	   	    	break;
   	   	    case 4:
   	   	    	dis();
   	   	    	break;
   	   	    
   	   	    	
   	   	
   	   	
	   }
   }

  return 0;
}
